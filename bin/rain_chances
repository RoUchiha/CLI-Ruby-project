#!/usr/bin/env ruby


require 'open-uri'
require 'nokogiri'
require 'addressable/uri'
require 'json'

class Search

    attr_accessor :location, :zip_url

    def initialize(location)
        if location < 501 || location > 99950
            raise ArgumentError 
        else
            searcher(location)
        end
    end

    def searcher(zip)
        fixed_zip = zip_convert(zip)
        uri = Addressable::URI.parse('https://weather.com/weather/today/l/' + fixed_zip)        
        @zip_url = uri.to_s
    end

    def zip_convert(code)
        zcode = code.to_s
        
        while zcode.length < 5 do
            zcode = "0" + zcode
        end
        return zcode
    end

end


class Scraper

    attr_accessor :location, :scrape_url

    def initialize(location)
        scrape_rain(location)
    end

    def scrape_rain(zip)
        link = Search.new(zip).zip_url
        html = URI.open(link)
        weather = Nokogiri::HTML(html)
        if weather.css('.CurrentConditions--precipValue--3nxCj').text != ""
            @scrape_url = weather.css('.CurrentConditions--precipValue--3nxCj').text
        elsif weather.css('.CurrentConditions--precipValue--3nxCj').text == "" && !weather.css('.CurrentConditions--phraseValue--2Z18W').text.include?("Rain")
            @scrape_url = "0% chance of rain"
        else
            @scrape_url = "expect #{weather.css('.CurrentConditions--phraseValue--2Z18W').text}"
        end
        return @scrape_url
    end
end

class Rain 

    attr_accessor :location

    def initialize(location)
        chances = Scraper.new(location).scrape_url
        puts "This location's rain forecast: #{chances}."
    end
end




def start
    puts "Hello. What zip code would you like today's rain chances for?"
    user_zip = gets.chomp.to_i
    Rain.new(user_zip)

    new_location
end

def new_location
    puts "Would you like to check another zip code? Y/N"
    yes_no = gets.chomp
    if yes_no == "Y" || yes_no == "y"
        start 
    elsif yes_no == "N" || yes_no == "n" || yes_no == "exit" || yes_no == "EXIT"
        exit
    else 
        new_location
    end
end



